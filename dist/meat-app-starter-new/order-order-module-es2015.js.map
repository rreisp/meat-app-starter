{"version":3,"sources":["./src/app/order/delivery-costs/delivery-costs.component.html","./src/app/order/order-items/order-items.component.html","./src/app/order/order.component.html","./src/app/order/delivery-costs/delivery-costs.component.ts","./src/app/order/order-items/order-items.component.ts","./src/app/order/order.component.ts","./src/app/order/order.model.ts","./src/app/order/order.module.ts"],"names":[],"mappings":"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","file":"order-order-module-es2015.js","sourcesContent":["module.exports = \"<div class=\\\"table-responsive\\\">\\n        <table class=\\\"table\\\">\\n                <tbody>\\n                        <tr>\\n                                <th style=\\\"width:50%\\\">Itens:</th>\\n                                <td class=\\\"text-right\\\">{{itemsValue | currency: 'BRL': true}}</td>\\n                        </tr>\\n                        <tr>\\n                                <th>Frete:</th>\\n                                <td class=\\\"text-right\\\">{{delivery | currency: 'BRL': true}}</td>\\n                        </tr>\\n                        <tr>\\n                                <th>Total:</th>\\n                                <td class=\\\"text-right\\\">{{total() | currency: 'BRL': true}}</td>\\n                        </tr>\\n                </tbody>\\n        </table>\\n</div>\"","module.exports = \"<div class=\\\"col-xs-12\\\" *ngIf=\\\"items.length === 0\\\">\\n        <p>\\n                Não há itens no seu carrinho. Que tal começar por <a [routerLink]=\\\"['/restaurants']\\\">aqui</a>?\\n        </p>\\n</div>\\n<div class=\\\"col-xs-12 table-responsive\\\" *ngIf=\\\"items.length > 0\\\">\\n        <table class=\\\"table table-striped\\\">\\n                <thead>\\n                        <tr>\\n                                <th class=\\\"text-center\\\">Quantidade</th>\\n                                <th>Item</th>\\n                                <th>Descrição</th>\\n                                <th class=\\\"text-right\\\">Subtotal</th>\\n                                <th class=\\\"text-right\\\"></th>\\n                        </tr>\\n                </thead>\\n                <tbody *ngFor=\\\"let item of items\\\">\\n                        <tr>\\n                                <td class=\\\"text-center\\\">\\n                                        <a (click)=\\\"emitDecreaseQty(item)\\\" class=\\\"btn btn-sm\\\"><i\\n                                                        class=\\\"fa fa-minus\\\"></i></a>\\n                                        {{item.quantity}}\\n                                        <a (click)=\\\"emitIncreaseQty(item)\\\" class=\\\"btn btn-sm\\\"><i\\n                                                        class=\\\"fa fa-plus\\\"></i></a>\\n                                </td>\\n                                <td>{{item.menuItem.name}}</td>\\n\\n                                <td>{{item.menuItem.description}}</td>\\n                                <td class=\\\"text-right\\\">{{item.value() | currency: 'BRL': true}}</td>\\n                                <td class=\\\"text-right\\\">\\n                                        <a (click)=\\\"emitRemove(item)\\\" class=\\\"btn btn-sm danger\\\"><i\\n                                                        class=\\\"fa fa-remove\\\"></i></a>\\n                                </td>\\n                        </tr>\\n                </tbody>\\n        </table>\\n</div>\"","module.exports = \"<!--INICIO DO CONTEUDO-->\\n<section class=\\\"content-header\\\">\\n</section>\\n\\n<section class=\\\"content\\\">\\n        <section class=\\\"invoice\\\">\\n                <form [formGroup]=\\\"orderForm\\\" novalidate>\\n                        <div class=\\\"row\\\">\\n                                <div class=\\\"col-xs-12\\\">\\n                                        <h2 class=\\\"page-header\\\">\\n                                                <i class=\\\"fa fa-shopping-cart\\\"></i> Finalize o seu pedido\\n                                        </h2>\\n                                </div>\\n                        </div>\\n\\n                        <div class=\\\"row\\\">\\n                                <div class=\\\"col-xs-12 col-sm-9\\\">\\n                                        <p class=\\\"lead\\\">Seus dados:</p>\\n                                </div>\\n                                <div class=\\\"col-xs-12 col-sm-3\\\">\\n                                        <span class=\\\"help-block pull-right has-error-block\\\"\\n                                                *ngIf=\\\"orderForm.hasError('emailsNotMatch')\\\"><i class=\\\"fa fa-remove\\\"></i> E-mails não conferem</span>\\n                                </div>\\n                                <div class=\\\"col-sm-6 col-xs-12\\\">\\n                                        <mt-input-container errorMessage=\\\"Campo obrigatório e com 5 caracteres\\\"\\n                                                label=\\\"Nome\\\">\\n                                                <input class=\\\"form-control\\\" formControlName=\\\"name\\\" placeholder=\\\"Nome\\\"\\n                                                        autocomplete=\\\"off\\\" />\\n                                        </mt-input-container>\\n                                </div>\\n                                <div class=\\\"col-sm-3 col-xs-6\\\">\\n                                        <mt-input-container errorMessage=\\\"E-mail inválido\\\" label=\\\"E-mail\\\">\\n                                                <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\"\\n                                                        placeholder=\\\"E-mail\\\" autocomplete=\\\"off\\\" />\\n                                        </mt-input-container>\\n                                </div>\\n                                <div class=\\\"col-sm-3 col-xs-6\\\">\\n                                        <mt-input-container errorMessage=\\\"E-mail inválido\\\" label=\\\"E-mail\\\">\\n                                                <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                                                        formControlName=\\\"emailConfirmation\\\" placeholder=\\\"E-mail\\\"\\n                                                        autocomplete=\\\"off\\\" />\\n                                        </mt-input-container>\\n                                </div>\\n                        </div>\\n\\n                        <div class=\\\"row\\\">\\n                                <div class=\\\"col-xs-12\\\">\\n                                        <p class=\\\"lead\\\">Endereço de Entrega:</p>\\n                                </div>\\n                                <div class=\\\"col-sm-6 col-xs-12\\\">\\n                                        <mt-input-container errorMessage=\\\"Campo obrigatório e com 5 caracteres\\\"\\n                                                label=\\\"Endereço\\\">\\n                                                <input class=\\\"form-control\\\" formControlName=\\\"address\\\"\\n                                                        placeholder=\\\"Endereço\\\" autocomplete=\\\"off\\\" />\\n                                        </mt-input-container>\\n                                </div>\\n                                <div class=\\\"col-sm-3 col-xs-6\\\">\\n                                        <mt-input-container errorMessage=\\\"Obrigatório e somente números\\\" label=\\\"Número\\\">\\n                                                <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"number\\\"\\n                                                        placeholder=\\\"Número\\\" pattern=\\\"^[0-9]*$\\\" autocomplete=\\\"off\\\" />\\n                                        </mt-input-container>\\n                                </div>\\n                                <div class=\\\"col-sm-3 col-xs-6\\\">\\n                                        <mt-input-container>\\n                                                <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                                                        formControlName=\\\"optionalAddress\\\" placeholder=\\\"Complemento\\\" />\\n                                        </mt-input-container>\\n                                </div>\\n                                <!-- /.col -->\\n                        </div>\\n                        <!-- /.row -->\\n\\n                        <!-- Table row -->\\n                        <div class=\\\"row\\\">\\n                                <div class=\\\"col-xs-12\\\">\\n                                        <p class=\\\"lead\\\">Itens do Pedido:</p>\\n                                </div>\\n                                <mt-order-items [items]=\\\"cartItems()\\\" (increaseQty)=\\\"increaseQty($event)\\\"\\n                                        (decreaseQty)=\\\"decreaseQty($event)\\\" (remove)=\\\"remove($event)\\\"></mt-order-items>\\n                                <!-- /.col -->\\n                        </div>\\n                        <!-- /.row -->\\n\\n                        <div class=\\\"row\\\">\\n                                <!-- accepted payments column -->\\n                                <div class=\\\"col-sm-6 col-xs-12\\\">\\n                                        <p class=\\\"lead\\\">Formas de Pagamento:</p>\\n\\n                                        <div class=\\\"form-group\\\">\\n                                                <mt-radio [options]=\\\"paymentOptions\\\" formControlName=\\\"paymentOption\\\">\\n                                                </mt-radio>\\n                                        </div>\\n\\n                                </div>\\n                                <!-- /.col -->\\n                                <div class=\\\"col-sm-6 col-xs-12\\\">\\n                                        <p class=\\\"lead\\\">Frete e Total:</p>\\n                                        <mt-delivery-costs [delivery]=\\\"delivery\\\" [itemsValue]=\\\"itemsValue()\\\">\\n                                        </mt-delivery-costs>\\n                                </div>\\n                                <!-- /.col -->\\n                        </div>\\n\\n                </form>\\n\\n                <div class=\\\"row\\\">\\n                        <div class=\\\"col-xs-12\\\">\\n                                <button (click)=\\\"checkOrder(orderForm.value)\\\" class=\\\"btn btn-success pull-right\\\"\\n                                        [disabled]=\\\"!orderForm.valid || cartItems().length === 0\\\"><i\\n                                                class=\\\"fa fa-credit-card\\\"></i> Concluir Pedido\\n                                </button>\\n                        </div>\\n                </div>\\n\\n        </section>\\n</section>\\n<!-- FIM DO CONTEUDO-->\"","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'mt-delivery-costs',\n  templateUrl: './delivery-costs.component.html'\n})\nexport class DeliveryCostsComponent implements OnInit {\n\n  @Input() delivery: number;\n  @Input() itemsValue: number;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  total(): number {\n    return this.delivery + this.itemsValue;\n  }\n\n}\n","import { CartItem } from './../../restaurant-detail/shopping-cart/cart-item.model';\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'mt-order-items',\n  templateUrl: './order-items.component.html'\n})\nexport class OrderItemsComponent implements OnInit {\n\n  @Input() items: CartItem[];\n\n  @Output() increaseQty = new EventEmitter<CartItem>();\n  @Output() decreaseQty = new EventEmitter<CartItem>();\n  @Output() remove = new EventEmitter<CartItem>();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  emitIncreaseQty(item: CartItem) {\n    this.increaseQty.emit(item);\n  }\n\n  emitDecreaseQty(item: CartItem) {\n    this.decreaseQty.emit(item);\n  }\n\n  emitRemove(item: CartItem) {\n    this.remove.emit(item);\n  }\n}\n","import { CartItem } from './../restaurant-detail/shopping-cart/cart-item.model';\nimport { Component, OnInit } from '@angular/core';\nimport { RadioOption } from '../shared/radio/radio-option.model';\nimport { OrderService } from './order.service';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\nimport { Order, OrderItem } from './order.model';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators, AbstractControl } from '@angular/forms';\n\n@Component({\n  selector: 'mt-order',\n  templateUrl: './order.component.html'\n})\nexport class OrderComponent implements OnInit {\n\n  constructor(private orderService: OrderService, private router: Router, private formBuilder: FormBuilder) { }\n\n  emailPattern = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n\n  numberPattern = /^[0-9]*$/;\n\n  orderForm: FormGroup;\n\n  // tslint:disable-next-line:no-inferrable-types\n  delivery: number = 8;\n\n  paymentOptions: RadioOption[] = [\n    { label: 'Dinheiro', value: 'MON' },\n    { label: 'Cartão de Débito', value: 'DEB' },\n    { label: 'Cartão Refeição', value: 'REF' },\n  ];\n\n  static equalsTo(group: AbstractControl): { [key: string]: boolean } {\n    const email = group.get('email');\n    const emailConfirmation = group.get('emailConfirmation');\n    if (!email || !emailConfirmation) {\n      return undefined;\n    }\n\n    if (email.value !== emailConfirmation.value) {\n      return { emailsNotMatch: true };\n    }\n    return undefined;\n  }\n\n  ngOnInit() {\n    this.orderForm = this.formBuilder.group({\n      name: this.formBuilder.control('', [Validators.required, Validators.minLength(5)]),\n      email: this.formBuilder.control('', [Validators.required, Validators.pattern(this.emailPattern)]),\n      emailConfirmation: this.formBuilder.control('', [Validators.required, Validators.pattern(this.emailPattern)]),\n      address: this.formBuilder.control('', [Validators.required, Validators.minLength(5)]),\n      number: this.formBuilder.control('', [Validators.required, Validators.pattern(this.numberPattern)]),\n      optionalAddress: this.formBuilder.control(''),\n      paymentOption: this.formBuilder.control('', [Validators.required])\n    }, { validator: OrderComponent.equalsTo });\n  }\n\n  itemsValue(): number {\n    return this.orderService.itemsValue();\n  }\n\n  cartItems(): CartItem[] {\n    return this.orderService.cartItems();\n  }\n\n  increaseQty(item: CartItem) {\n    this.orderService.increaseQty(item);\n  }\n\n  decreaseQty(item: CartItem) {\n    this.orderService.decreaseQty(item);\n  }\n\n  remove(item: CartItem) {\n    this.orderService.remove(item);\n  }\n\n  checkOrder(order: Order) {\n    order.orderItems = this.cartItems()\n      .map((item: CartItem) => new OrderItem(item.quantity, item.menuItem.id));\n    this.orderService.checkOrder(order)\n      .subscribe((orderId: string) => {\n        this.router.navigate(['/order-summary']);\n        this.orderService.clear();\n      });\n    console.log(order);\n  }\n}\n","class Order {\n        constructor(\n                public address: string,\n                // tslint:disable-next-line:variable-name\n                public number: number,\n                public optionalAddress: string,\n                public paymentOption: string,\n                public orderItems: OrderItem[] = [],\n                public id?: string\n        ) { }\n}\n\nclass OrderItem {\n        constructor(public quantity: number, public menuId: string) { }\n}\n\nexport { Order, OrderItem };\n","import { NgModule } from '@angular/core';\nimport { OrderComponent } from './order.component';\nimport { OrderItemsComponent } from './order-items/order-items.component';\nimport { DeliveryCostsComponent } from './delivery-costs/delivery-costs.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SharedModule } from './../shared/shared.module';\n\nconst ROUTES: Routes = [\n        { path: '', component: OrderComponent }\n];\n\n@NgModule({\n        declarations: [\n                OrderComponent, OrderItemsComponent, DeliveryCostsComponent\n        ],\n        imports: [SharedModule, RouterModule.forChild(ROUTES)]\n})\n\nexport class OrderModule {\n\n}\n"],"sourceRoot":""}